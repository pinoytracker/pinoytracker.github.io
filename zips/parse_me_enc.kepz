# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Tue Dec 10 11:17:14 2024
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'='))